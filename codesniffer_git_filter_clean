#!/bin/sh

STANDARD="Yii2"
ENCODING="utf-8"
IGNORE_WARNINGS=Y
COLORS=Y
FILTER_NO_ABORT=

VENDOR=`readlink -e "$0"`
VENDOR=`dirname "$VENDOR"`
VENDOR=`dirname "$VENDOR"`
VENDOR=`dirname "$VENDOR"`

PROJECT=`dirname "$VENDOR"`;
if [ ! -d "$PROJECT/.git/hooks/" ]; then
    PROJECT=`dirname "$PROJECT"`;
    if [ ! -d "$PROJECT/.git/hooks/" ]; then
        PROJECT=`dirname "$PROJECT"`;
        if [ ! -d "$PROJECT/.git/hooks/" ]; then
            PROJECT=`dirname "$PROJECT"`;
            if [ ! -d "$PROJECT/.git/hooks/" ]; then
                PROJECT=`dirname "$PROJECT"`;
                if [ ! -d "$PROJECT/.git/hooks/" ]; then
                    echo "Unable find project root!"
                    exit 1
                fi
            fi
        fi
    fi
fi

if [ -f "$PROJECT/.phpcsgit" ]; then
    . $PROJECT/.phpcsgit
fi

if [ "$IGNORE_WARNINGS" != "" ]; then
  IGNORE_WARNINGS="-n"
else
  IGNORE_WARNINGS=""
fi

if [ "$COLORS" != "" ]; then
  COLORS="--runtime-set colors 1"
else
  COLORS="--runtime-set colors 0"
fi

if [ "$STANDARD" = "Yii2" ]; then
  STANDARD="$VENDOR/yiisoft/yii2-coding-standards/Yii2"
fi
if [ "$STANDARD" = "Yii2Ext" ]; then
  STANDARD="$VENDOR/mj4444/php_codesniffer_yii2_githook/Yii2Ext"
fi
if [ "$STANDARD" = "PSR2Ext" ]; then
  STANDARD="$VENDOR/mj4444/php_codesniffer_yii2_githook/PSR2Ext"
fi

cat > "$PROJECT/.git/addfile.orig.tmp"
cp "$PROJECT/.git/addfile.orig.tmp" "$PROJECT/.git/addfile.patched.tmp"

$VENDOR/bin/phpcbf --standard=$STANDARD --encoding=$ENCODING $COLORS $IGNORE_WARNINGS "$PROJECT/.git/addfile.patched.tmp" > "$PROJECT/.git/addfile.result.tmp"
PATHCODEEXIT=$?

$VENDOR/bin/phpcs --standard=$STANDARD --encoding=$ENCODING $COLORS $IGNORE_WARNINGS < "$PROJECT/.git/addfile.patched.tmp" >&2
if [ $? != 0 ]; then
  if [ "$FILTER_NO_ABORT" != "" ]; then
    cat < "$PROJECT/.git/addfile.patched.tmp"
    exit 0
  fi
  cat < "$PROJECT/.git/addfile.orig.tmp"
  exit 1
fi

if [ $PATHCODEEXIT != 0 ]; then
  echo "When added found errors have been fixed in \"$@\"" >&2
#  cp "$PROJECT/.git/addfile.patched.tmp" "$@"
fi

cat < "$PROJECT/.git/addfile.patched.tmp"
rm "$PROJECT/.git/addfile.orig.tmp"
rm "$PROJECT/.git/addfile.patched.tmp"
rm "$PROJECT/.git/addfile.result.tmp"

exit 0
