#!/bin/sh

VENDOR=`readlink -e "$0"`
VENDOR=`dirname "$VENDOR"`
SOURCE="$VENDOR"
VENDOR=`dirname "$VENDOR"`
VENDOR=`dirname "$VENDOR"`

PROJECT=`dirname "$VENDOR"`;
if [ ! -d "$PROJECT/.git/hooks/" ]; then
    PROJECT=`dirname "$PROJECT"`;
    if [ ! -d "$PROJECT/.git/hooks/" ]; then
        PROJECT=`dirname "$PROJECT"`;
        if [ ! -d "$PROJECT/.git/hooks/" ]; then
            PROJECT=`dirname "$PROJECT"`;
            if [ ! -d "$PROJECT/.git/hooks/" ]; then
                PROJECT=`dirname "$PROJECT"`;
                if [ ! -d "$PROJECT/.git/hooks/" ]; then
                    echo "Unable to install hook: Git folder not found!"
                    exit 1
                fi
            fi
        fi
    fi
fi

HOOKS_PATH="$PROJECT/.git/hooks"
INFO_PATH="$PROJECT/.git/info"
SHORT_VENDOR="${VENDOR#$PROJECT}"
SHORT_SOURCE="${SOURCE#$PROJECT/}"

echo "Install hook in \"$HOOKS_PATH\""
if [ -e "$HOOKS_PATH/pre-commit" ]; then
    if [ -f "$HOOKS_PATH/pre-commit" ]; then
        echo "Remove file \"$HOOKS_PATH/pre-commit\""
        rm -f $HOOKS_PATH/pre-commit
        if [ -e "$HOOKS_PATH/pre-commit" ]; then
            echo "Unable to install hook: \"$HOOKS_PATH/pre-commit\" is readonly!";
            exit 1
        fi
    else
        echo "Unable to install hook: \"$HOOKS_PATH/pre-commit\" is not file!";
        exit 1
    fi
fi

echo "Copy hook from \"$SOURCE/hooks/pre-commit\" to \"$HOOKS_PATH/pre-commit\"";
cp $SOURCE/hooks/pre-commit $HOOKS_PATH/pre-commit
chmod +x ${HOOKS_PATH}/pre-commit
sed 's~VENDOR="$PROJECT[^"]*"~VENDOR="$PROJECT'$SHORT_VENDOR'"~' -i $HOOKS_PATH/pre-commit

if [ ! -f "$PROJECT/.phpcsgit" ]; then
    echo "Copy config from \"$SOURCE/.phpcsgit\" to \"$PROJECT/.phpcsgit\"";
    cp $SOURCE/.phpcsgit $PROJECT/.phpcsgit
fi


echo "Install git filter \"phpcbf\" for \"php, phtml, js\" files";
git config filter.phpcbf.required true
git config filter.phpcbf.clean "$SHORT_SOURCE/codesniffer_git_filter_clean %f"
if [ ! -f "$INFO_PATH/attributes" ]; then
    touch "$INFO_PATH/attributes"
fi
if ! grep -q "*.php filter=phpcbf" "$INFO_PATH/attributes"; then
    echo "*.php filter=phpcbf" >> "$INFO_PATH/attributes"
fi
if ! grep -q "*.phtml filter=phpcbf" "$INFO_PATH/attributes"; then
    echo "*.phtml filter=phpcbf" >> "$INFO_PATH/attributes"
fi
if ! grep -q "*.js filter=phpcbf" "$INFO_PATH/attributes"; then
    echo "*.js filter=phpcbf" >> "$INFO_PATH/attributes"
fi
